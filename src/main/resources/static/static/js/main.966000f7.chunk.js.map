{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/ProjectTasks/AddProjectTask.js","components/projectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","intialState","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","match","params","getProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","erorrs","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.966000f7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS , GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch =>\r\n{\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type:GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch =>\r\n{\r\n  try\r\n  {\r\n    const res = await axios.get(`/api/project/${id}`)\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  }catch(error)\r\n  {\r\n      history.push('/dashboard');\r\n  }\r\n  \r\n};\r\n\r\nexport const deleteProject = id => async dispatch =>\r\n{\r\n  if(window.confirm(\"Are You Sure ? This Will Delete The Project And All The Data Related To It ?\"))\r\n  {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type:DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n};\r\n\r\n","//type of action we gonna preform (reducer)\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER=\"SET_CURRENT_USER\";\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\";\r\n\r\n class ProjectItem extends Component {\r\n\r\n\r\n    onDeleteClick = id =>\r\n    {\r\n        this.props.deleteProject(id);\r\n    }\r\n    render() {\r\n        const {project} = this.props;\r\n\r\n        return (  <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-4 col-8\">\r\n                    <h3>{project.projectName}</h3>\r\n                    <p>{project.description}</p>\r\n                </div>\r\n                <div className=\"col-md-4 d-none d-lg-block\">\r\n                    <ul className=\"list-group\">\r\n                        <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                            <li className=\"list-group-item board\">\r\n                                <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                            </li>\r\n                        </Link>\r\n                        <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                            <li className=\"list-group-item update\">\r\n                                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                            </li>\r\n                        </Link>\r\n                            <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,project.projectIdentifier)}>\r\n                                <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                            </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    ); \r\n            \r\n        \r\n    }\r\n}\r\n\r\nProjectItem.propTypes  =\r\n{\r\n    deleteProject: PropTypes.func.isRequired\r\n} \r\n\r\nexport default connect(null,{deleteProject}) (ProjectItem);\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n const CreateProjectButton =  () => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/addProject\"\r\n         className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CreateProjectButton;","import React, { Component } from 'react'\r\nimport ProjectItem from './project/ProjectItem';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CreateProjectButton from './project/CreateProjectButton';\r\nimport {connect} from \"react-redux\";\r\nimport {getProjects} from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n class Dashboard extends Component {\r\n\r\n    //life cycle hook\r\n    componentDidMount()\r\n    {\r\n        this.props.getProjects();\r\n    }\r\n    render() {\r\n\r\n        const {projects} = this.props.project;\r\n\r\n\r\n        return( <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                    <CreateProjectButton />\r\n                    <br />\r\n                    <hr />\r\n                    {projects.map(project=>( //For each ES6 Javascript\r\n                        <ProjectItem key = {project.id} project = {project}/>\r\n                    ))}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n        \r\n       \r\n      \r\n\r\n    }\r\n}\r\nDashboard.propTypes = {\r\n    project:PropTypes.object.isRequired,\r\n    getProjects:PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    project:state.project\r\n\r\n});\r\nexport default connect(mapStateToProps,{getProjects}) (Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token; //Setting a header with Authorization and the token\r\n    }else{\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser,history) =>async dispatch =>{\r\n    try{\r\n        await axios.post(\"/api/users/register\",newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        });\r\n    }catch(error){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n    }\r\n};\r\nexport const login = LoginRequest => async dispatch => {\r\n\r\n    try{\r\n        // post => Login Request\r\n        const res  = await axios.post(\"/api/users/login\",LoginRequest);\r\n\r\n        // extract the token from res.data\r\n        const{token}  =res.data;\r\n\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\",token);\r\n\r\n        // set our token in the header\r\n        setJWTToken(token);\r\n\r\n        // decode the token on React\r\n        const decoded = jwt_decode(token);\r\n\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n            type:SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n        \r\n};\r\n\r\nexport const logout = () => dispatch =>\r\n{\r\n    localStorage.removeItem(\"jwtToken\"); //Remove token from localStorage\r\n    setJWTToken(false); //Delete the header\r\n    dispatch({\r\n        type:SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n};","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Proptypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/securityActions\";\r\n\r\n class Header extends Component {\r\n\r\n\r\n    logout()\r\n    {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const{validToken,user} = this.props.security;\r\n\r\n        const userIsAuthenticated  = (\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                       <i className=\"fas fa-user-circle mr-1\"/> {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/logout\" onClick = {this.logout.bind(this)}>\r\n                Logout\r\n                 </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated  = (\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                       Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                Login\r\n                 </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if(validToken && user){\r\n            headerLinks = userIsAuthenticated;\r\n        }\r\n        else{\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n              //Navbar\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n    <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n        </Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        {headerLinks}\r\n\r\n\r\n    </div>\r\n</nav>\r\n        )\r\n    }\r\n};\r\n\r\nHeader.propTypes = {\r\n    logout: Proptypes.func.isRequired,\r\n    security:Proptypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security:state.security\r\n})\r\n\r\nexport default connect(mapStateToProps,{logout})(Header);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors:{}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps)\r\n  {\r\n    if(nextProps.errors)\r\n    {\r\n      this.setState({errors:nextProps.errors});\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n        \r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectName})}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (<div className=\"invalid-feedback\">{errors.projectName}</div>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectIdentifier})}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (<div className=\"invalid-feedback\">{errors.projectIdentifier}</div>)}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.description})}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (<div className=\"invalid-feedback\">{errors.description}</div>)}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors:PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  errors:state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);","//A REDUCER\r\nimport {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case GET_ERRORS:\r\n            return action.payload; //if we got errors on the server those are gonna dispatch to the store\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\r\n\r\nconst initialState = \r\n{\r\n    projects:[],\r\n    project:{}\r\n};\r\n\r\nexport default function(state = initialState,action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case GET_PROJECTS:\r\n        return {...state, projects:action.payload};\r\n\r\n\r\n        case GET_PROJECT:\r\n            return {...state,project:action.payload};\r\n\r\n\r\n        case DELETE_PROJECT:\r\n            return {...state,\r\n                projects:state.projects.filter(project=>project.projectIdentifier!== action.payload)\r\n            };\r\n\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_BACKLOG,GET_PROJECT_TASK,DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    project_tasks:[],\r\n    project_task:{}\r\n}\r\n\r\nexport default function(state = initialState, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_task:action.payload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task=>project_task.projectSequence!== action.payload)\r\n            \r\n                //TO_DO \r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from \"../actions/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    user:{}, \r\n    validToken:false \r\n}\r\n\r\nconst booleanActionPayload = (payload)=>\r\n{\r\n    if(payload){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\nexport default function(state=initialState,action){\r\n    \r\n    switch(action.type)\r\n    {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user:action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n    \r\n\r\n}","import {combineReducers} from \"redux\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers (\r\n    {\r\n        errors:errorReducer,\r\n        project:projectReducer,\r\n        backlog: backlogReducer,\r\n        security:securityReducer\r\n\r\n    }\r\n);","import {createStore,applyMiddleware,compose} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst intialState = {}\r\nconst middleWare = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools)\r\n{\r\n    store = createStore(rootReducer,intialState,compose(applyMiddleware(...middleWare),ReactReduxDevTools\r\n   \r\n    ));\r\n}\r\nelse\r\n{\r\n    store = createStore(rootReducer,intialState,compose(applyMiddleware(...middleWare)\r\n    ));\r\n}\r\nexport default store;","import React, { Component } from 'react';\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\n\r\n class UpdateProject extends Component {\r\n\r\n    //set State\r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        this.state = {\r\n            id:\"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors:{}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n        if(nextProps.errors)\r\n        {\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n        const {id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date} = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n        projectName,\r\n        projectIdentifier,\r\n        description,\r\n        start_date,\r\n        end_date\r\n        });\r\n    }\r\n\r\n    onChange(e)\r\n    {\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault() // The event.preventDefault() method stops the default action of an element from happening.\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName:this.state.projectName,\r\n            projectIdentifier:this.state.projectIdentifier,\r\n            description:this.state.description,\r\n            start_date:this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(updateProject,this.props.history);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n        const{id} = this.props.match.params; //extracting parameter value from the props params\r\n        this.props.getProject(id,this.props.history);\r\n    }\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit = {this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                 className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectName})}\r\n                                 placeholder=\"Project Name\"\r\n                                 name=\"projectName\"\r\n                                 value ={this.state.projectName}\r\n                                 onChange={this.onChange} />\r\n                                 {errors.projectName && (<div className=\"invalid-feedback\">{errors.projectName}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectIdentifier})}\r\n                                  placeholder=\"Unique Project ID\"\r\n                                  name=\"projectIdentifier\"\r\n                                  value={this.state.projectIdentifier}\r\n                                  onChange={this.onChange}\r\n                                    disabled />\r\n                                    {errors.projectIdentifier && (<div className=\"invalid-feedback\">{errors.projectIdentifier}</div>)}\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group\">\r\n                                <textarea className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.description})}\r\n                                 placeholder=\"Project Description\"\r\n                                  name=\"description\"\r\n                                  value={this.state.description}\r\n                                  onChange={this.onChange}></textarea>\r\n                                  {errors.description && (<div className=\"invalid-feedback\">{errors.description}</div>)}\r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\"\r\n                                 className=\"form-control form-control-lg\"\r\n                                  name=\"start_date\"\r\n                                  value={this.state.start_date}\r\n                                  onChange={this.onChange} />\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\"\r\n                                 className=\"form-control form-control-lg\"\r\n                                  name=\"end_date\"\r\n                                  value={this.state.end_date}\r\n                                  onChange={this.onChange} />\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n     getProject:PropTypes.func.isRequired,\r\n     createProject:PropTypes.func.isRequired,\r\n     project:PropTypes.object.isRequired,\r\n     errors: PropTypes.object.isRequired\r\n    };\r\n\r\nconst mapStateToProps = state=>({\r\n    project:state.project.project,\r\n    errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProject, createProject}) (UpdateProject);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\n class ProjectTask extends Component {\r\n\r\n\r\n    onDeleteClick(backlog_id,pt_id)\r\n    {\r\n        this.props.deleteProjectTask(backlog_id,pt_id);\r\n    }\r\n    render() {\r\n        const {project_task} = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if(project_task.priority===1)\r\n        {\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\";\r\n        }\r\n\r\n        if(project_task.priority===2)\r\n        {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if(project_task.priority===3)\r\n        {\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\";\r\n        }\r\n        return (\r\n\r\n            <div className=\"card mb-1 bg-light\">\r\n            <div className={`card-header text-primary ${priorityClass}`}>\r\n                ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n                <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                    {project_task.acceptanceCriteria}\r\n                </p>\r\n                <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                    View / Update\r\n                </Link>\r\n                <button className=\"btn btn-danger ml-4\"\r\n                onClick={this.onDeleteClick.bind(this,project_task.projectIdentifier,project_task.projectSequence)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask:PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteProjectTask}) (ProjectTask);","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG , GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\nimport ProjectTask from \"../components/projectBoard/ProjectTasks/ProjectTask\";\r\n\r\n\r\nexport const addProjectTask=(\r\n    backlog_id,\r\n    project_task,\r\n    history) => async dispatch =>\r\n    {\r\n        try\r\n        {\r\n            await axios.post(`/api/backlog/${backlog_id}`,project_task);\r\n            history.push(`/projectBoard/${backlog_id}`);\r\n            dispatch({\r\n                type:GET_ERRORS, \r\n                payload: {} //get rid of errors once everything is ok \r\n            });\r\n        }catch(err)\r\n        {\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data // \r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    export const getBacklog = backlog_id => async dispatch =>\r\n    {\r\n        try\r\n        {\r\n            const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n            dispatch({\r\n                type:GET_BACKLOG,\r\n                payload:res.data\r\n            })\r\n        }catch(err)\r\n        {\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data // \r\n            });\r\n        }\r\n    }\r\n\r\n    export const getProjectTask = (backlog_id,pt_id,history) => async dispatch =>\r\n    {\r\n        try\r\n        {\r\n            const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n            dispatch({\r\n                type:GET_PROJECT_TASK,\r\n                payload:res.data\r\n            });\r\n        }catch(err)\r\n        {\r\n            history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    export const updateProjectTask = (backlog_id,pt_id,project_task,history) => async dispatch =>\r\n    {\r\n        try\r\n        {\r\n            await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`,project_task);\r\n            history.push(`/projectBoard/${backlog_id}`);\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: {}\r\n            });\r\n        }catch(err)\r\n        {\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    };\r\n\r\n    export const  deleteProjectTask = (backlog_id,pt_id) => async dispatch =>\r\n    {\r\n        if(window.confirm(`You Are Deleting Project Task ${pt_id}, this action cannot be undone`))\r\n        {\r\n            await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n            dispatch({\r\n                type:DELETE_PROJECT_TASK,\r\n                payload: pt_id\r\n            })\r\n        }\r\n    }\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n class Backlog extends Component {\r\n    render() {\r\n        const {project_tasks_prop} = this.props\r\n        const tasks = project_tasks_prop.map(project_task=>(\r\n            <ProjectTask key={project_task.id} project_task={project_task}/>\r\n        ));\r\n\r\n        let todoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for(let i=0; i< tasks.length ;i++)\r\n        {\r\n            if(tasks[i].props.project_task.status===\"TO_DO\")\r\n            {\r\n                todoItems.push(tasks[i]);\r\n            }\r\n            if(tasks[i].props.project_task.status===\"IN_PROGRESS\")\r\n            {\r\n                inProgressItems.push(tasks[i]);\r\n            }\r\n            if(tasks[i].props.project_task.status===\"DONE\")\r\n            {\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n                    {\r\n                        // insert tasks here\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                 </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Backlog;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getBacklog} from \"../..//actions/backlogActions\";\r\n\r\n\r\n class ProjectBoard extends Component {\r\n\r\n    //constructor to handle errors\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = \r\n        {\r\n            errors:{}\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {project_tasks} =this.props.backlog;\r\n        const {errors} = this.state;\r\n        let BoardContent;\r\n\r\n        //This function takes two parameters : errors and project tasks. if project tasks size is less than 1, we check if we have an error\r\n        //project not found , if so , we display the errors . if no projectNotFound error, we assume that the project have no tasks and display\r\n        // a div with text \"No project Tasks on this board\" . finally , if we have more than 0 tasks , we show the tasks.\r\n        const boardAlgorithm =(erorrs,project_tasks)=>{\r\n            if(project_tasks.length <1)\r\n            {\r\n                if(errors.projectNotFound){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                }\r\n                else if(errors.projectIdentifier){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                }\r\n                else\r\n                {\r\n                    return(\r\n                    <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No project Tasks on this board\r\n                    </div>);\r\n                }\r\n            }\r\n            else{\r\n               return <Backlog project_tasks_prop = {project_tasks} />\r\n            }\r\n        };\r\n\r\n        BoardContent = boardAlgorithm(errors,project_tasks); // stores the content of boardAlgorithm function result\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {\r\n                //Display the result of boardAlgorithm(errors,project_tasks) function\r\n            }\r\n            {BoardContent} \r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n{\r\n// Get all the proptypes we need for this page :\r\n// 1.the backlog object \r\n// 2.the getBacklog action function for backlogActions.js\r\n// 3.the errors object\r\n\r\n}\r\nProjectBoard.propTypes = {\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    backlog:state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{getBacklog}) (ProjectBoard);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {addProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\n class AddProjectTask extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        const {id}  = this.props.match.params;\r\n        this.state  = \r\n        {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier:id,\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n        if(nextProps.errors)\r\n        {\r\n          this.setState({errors:nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e)\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const newTask={\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        };\r\n\r\n        //console.log(newTask);\r\n        this.props.addProjectTask(this.state.projectIdentifier,newTask,this.props.history); //Runs the backlogActions.js addProjectTask function (This is like the service and backlogActions is the controller )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {id} = this.props.match.params;\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                             className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.summary})}\r\n                              name=\"summary\"\r\n                               placeholder=\"Project Task summary\"\r\n                               value = {this.state.summary}\r\n                               onChange = {this.onChange}\r\n                               />\r\n                               {errors.summary && (<div className=\"invalid-feedback\">{errors.summary}</div>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\"\r\n                             placeholder=\"Acceptance Criteria\"\r\n                              name=\"acceptanceCriteria\"\r\n                              value = {this.state.acceptanceCriteria}\r\n                              onChange = {this.onChange}\r\n                              ></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\"\r\n                             name=\"dueDate\"\r\n                             value = {this.state.dueDate}\r\n                             onChange = {this.onChange}\r\n                             />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\"\r\n                             name=\"priority\"\r\n                             value = {this.state.priority}\r\n                             onChange = {this.onChange}\r\n                             >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\"\r\n                             name=\"status\"\r\n                             value = {this.state.status}\r\n                             onChange = {this.onChange}\r\n                             >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=> ({\r\n    errors: state.errors\r\n})\r\nAddProjectTask.propTypes = {\r\n    addProjectTask:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps,{addProjectTask}) (AddProjectTask);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n class UpdateProjectTask extends Component {\r\n\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            projectIdentifier: \"\",\r\n            dueDate: \"\",\r\n            create_At: \"\",\r\n            errors:{}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const {backlog_id,pt_id} = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id,pt_id,this.props.history);\r\n\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            });\r\n        }\r\n        const  {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            projectIdentifier,\r\n            dueDate,\r\n            create_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            projectIdentifier,\r\n            dueDate,\r\n            create_At\r\n        });\r\n    }\r\n\r\n    onChange(e)\r\n    {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            dueDate: this.state.dueDate,\r\n            create_At: this.state.create_At\r\n        }\r\n        //console.log(UpdateProjectTask);\r\n        this.props.updateProjectTask(this.state.projectIdentifier,this.state.projectSequence,UpdateProjectTask,this.props.history);\r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                            Back to Project Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                        <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"} {this.state.projectSequence}{\" \"}</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.summary})}\r\n                                  name=\"summary\"\r\n                                   placeholder=\"Project Task summary\"\r\n                                   value={this.state.summary}\r\n                                   onChange={this.onChange}\r\n                                   />\r\n                                   {errors.summary && (<div className=\"invalid-feedback\">{errors.summary}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\"\r\n                                 placeholder=\"Acceptance Criteria\"\r\n                                  name=\"acceptanceCriteria\"\r\n                                  value={this.state.acceptanceCriteria}\r\n                                  onChange={this.onChange}\r\n                                  ></textarea>\r\n                            </div>\r\n                            <h6>Due Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\"\r\n                                 className=\"form-control form-control-lg\"\r\n                                  name=\"dueDate\"\r\n                                  value={this.state.dueDate}\r\n                                  onChange={this.onChange}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\"\r\n                                 name=\"priority\"\r\n                                 value={this.state.priority}\r\n                                 onChange={this.onChange}\r\n                                 >\r\n                                    <option value={0}>Select Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\"\r\n                                 name=\"status\"\r\n                                 value={this.state.acceptanceCriteria}\r\n                                 onChange={this.onChange}\r\n                                 >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask:PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project_task:state.backlog.project_task,\r\n    errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProjectTask,updateProjectTask}) (UpdateProjectTask);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n class Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken) // if we have valid token in our state\r\n        {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Project Managment Tool</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to join active projects or start you own\r\n                            </p>\r\n                            <hr />\r\n                            <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                            Sign Up\r\n                            </Link>\r\n                            <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                            Login\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps= state => ({\r\n\r\n    security:state.security\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport {createNewUser} from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\n class Register extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            confirmPassword: \"\",\r\n            fullName:\"\",\r\n            errors:{}\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken) // if we have valid token in our state\r\n        {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n        if(nextProps.errors)\r\n        {\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n    onSubmit(e){\r\n        \r\n        e.preventDefault();\r\n        const newUser = {\r\n            username:this.state.username,\r\n            password:this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            fullName:this.state.fullName\r\n        }\r\n\r\n        this.props.createNewUser(newUser,this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                        <p className=\"lead text-center\">Create your Account</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.fullName})}\r\n                                  placeholder=\"Full Name\"\r\n                                   name=\"fullName\"\r\n                                    value={this.state.fullName}\r\n                                    onChange={this.onChange}\r\n                                     />\r\n                                     {errors.fullName && (<div className=\"invalid-feedback\">{errors.fullName}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.username})}\r\n                                  placeholder=\"Email Address\"\r\n                                   name=\"username\"\r\n                                 value={this.state.username}\r\n                                 onChange={this.onChange}\r\n                                  />\r\n                                  {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.password})}\r\n                                  placeholder=\"Password\"\r\n                                   name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChange}\r\n                                 />\r\n                                 {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.confirmPassword})}\r\n                                  placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                     value={this.state.confirmPassword}\r\n                                     onChange={this.onChange} />\r\n                                     {errors.confirmPassword && (<div className=\"invalid-feedback\">{errors.confirmPassword}</div>)}\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state=>({\r\n    errors:state.errors,\r\n    security:state.security\r\n})\r\nexport default connect(mapStateToProps,{createNewUser}) (Register);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {login} from \"../../actions/securityActions\";\r\n\r\n\r\n\r\n class Login extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \r\n                username:\"\",\r\n                password:\"\",\r\n                errors:{}\r\n          \r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken) // if we have valid token in our state\r\n        {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        const LoginRequest  = {\r\n\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        };\r\n        this.props.login(LoginRequest); //Triggers the login from securityActions \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.errors)\r\n        {\r\n            this.setState({errors:nextProps.errors});\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.username})}\r\n                                  placeholder=\"Email Address\"\r\n                                   name=\"username\"\r\n                                   value = {this.state.username}\r\n                                   onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\"\r\n                                className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.password})}\r\n                                  placeholder=\"Password\"\r\n                                   name=\"password\"\r\n                                   value = {this.state.password}\r\n                                   onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{login}) (Login);","import React, { Component } from 'react'\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n{\r\n    //Check if the user have a valid token , if he have a token load all the props , else redirect the user to the login page \r\n}\r\n\r\nconst SecuredRoute = ({component:Component, security, ...otherProps}) =>(\r\n    <Route {...otherProps} render = {props => security.validToken === true ? (<Component {...props}/>) :\r\n     (<Redirect to=\"login\"/>) } />\r\n);\r\n\r\nSecuredRoute.propTypes  = {\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    security:state.security\r\n})\r\nexport default connect(mapStateToProps) (SecuredRoute)","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport {BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/project/AddProject';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/project/UpdateProject';\nimport ProjectBoard from './components/projectBoard/ProjectBoard';\nimport AddProjectTask from './components/projectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/projectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagment/Register';\nimport Login from './components/UserManagment/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken  = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken); // When we login we store the token in the localStorage , if we refresh our page the token dissappear but remain in the localStorage.so everytime we go through App.js  , get the token from localStorage, and set it again so we don't lose our credentials in every action\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n      type:SET_CURRENT_USER,\n      payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000;\n  if(decoded_jwtToken.exp<currentTime)\n  {\n    //Handle logout\n    store.dispatch(logout()); // Logout the user \n    window.location.href=\"/\"; // Redirect to main page\n  }\n }\n\nfunction App() {\n  return (\n    <Provider store={store}>  {/* The Redux */}\n    <Router>    {/* Rotouting our application */}\n    <div className=\"App\">\n    <Header />\n    {\n      //Public Routes\n    }\n    <Route exact path=\"/\" component={Landing}/>\n    <Route exact path=\"/register\" component={Register}/>\n    <Route exact path=\"/login\" component={Login}/>\n\n    {\n      //Private Routes\n    }\n    <Switch>\n    <SecuredRoute exact path=\"/dashboard\" component={Dashboard} /> {/* Providing our app the needed SecuredRoutes of components */}\n    <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n    <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n    <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n    <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n    <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n    </Switch>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}